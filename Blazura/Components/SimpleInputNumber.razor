@using System.ComponentModel.DataAnnotations
@using System.Reflection
@using System.Linq.Expressions
@using Microsoft.Extensions.DependencyInjection
@typeparam TValue
@inherits InputNumber<TValue>
@inject IServiceProvider ServiceProvider

<div class="@CssClass field">
    <Placeholder For="@ValueExpression" Format="@Format" HasData="!string.IsNullOrEmpty(CurrentValueAsString)">
        <InputNumber TValue="TValue" Value="@Value" ValueChanged="@ValueChanged" ValueExpression="@ValueExpression" />
    </Placeholder>
</div>

@code {
    [Parameter] public Func<string, string> Format { get; set; } = (str) => str;

    private IInputFormatter? InputFormatter;
    protected override void OnInitialized()
    {
        InputFormatter = ServiceProvider.GetService<IInputFormatter>();
        Format = InputFormatter?.Format ?? Format;
    }
}